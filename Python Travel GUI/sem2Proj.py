# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sem2Proj.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from Country import Country, NotVisited, NoVotes


def addCountryFromFile(countrylist):
    infile = open('countryFile.txt', "r")
    for line in infile:
        line = line.rstrip()
        list = line.split(':')
        countryname = list[0]
        capital = list[1]
        POI = list[2]
        encourage = int(list[3])
        discourage = int(list[4])
        if (list[5] == 'False'):
            visited = False
        else:
            visited = True

        if (list[6] == 'False'):
            transportable = False
        else:
            transportable = True

        timesVisited = int(list[7])
        totalDays = int(list[8])
        calcCost = int(list[9])

        new_country = Country(countryname, capital, POI, encourage, discourage, visited, transportable, timesVisited, totalDays, calcCost)
        countrylist.append(new_country)

countrylist = []
addCountryFromFile(countrylist)

def archiveCmd():
    outfile = open('countryFile.txt', "w")
    print("Archived")
    try:
        for el in countrylist:
            print(str(el.getName()) + ':', file=outfile, end='')
            print(str(el.getCapital()) + ':', file=outfile, end='')
            print(str(el.getPOI()) + ':', file=outfile, end='')
            print(str(el.getEncourage()) + ':', file=outfile, end='')
            print(str(el.getDiscourage()) + ':', file=outfile, end='')
            print(str(el.getVisited()) + ':', file=outfile, end='')
            print(str(el.getTransportable()) + ':', file=outfile, end='')
            print(str(el.getTimesVisited()) + ':', file=outfile, end='')
            print(str(el.getTotalDays()) + ':', file=outfile, end='')
            print(str(el.getCalcCost()), file=outfile)
    except NotVisited:
        for el in countrylist:
            print(str(el.getTimesVisited()) + ':', file=outfile, end='')
            print(str(el.getTotalDays()) + ':', file=outfile, end='')
            print(str(el.getCalcCost()), file=outfile)





class Ui_MainWindow(object):

    def __init__(self):
        self.current = 0
        self.a = None

    def display(self, index):
        global current
        current = index

        self.a = countrylist[index]
        self.countryNameEdit.setText(self.a.getName())
        self.capitalNameEdit.setText(self.a.getCapital())
        self.placesOfInterestEdit.setText(self.a.getPOI())
        self.visitedEdit.setText(str(self.a.getTimesVisited()))
        self.daySpentEdit.setText(str(self.a.getTotalDays()))
        self.encourageEdit.setText(str(self.a.getEncourage()))
        self.discourageEdit.setText(str(self.a.getDiscourage()))
        self.visitedCheckBox.setChecked(self.a.getVisited())
        self.travelCheckBox.setChecked(self.a.getTransportable())
        self.ratingEdit.setText(str("-%"))
        self.totalCostEdit.setText(str("-?"))


    def nextCountry(self):
        if self.current < len(countrylist) - 1:
            self.current += 1
            self.display(self.current)
            self.errorEdit.setText("")

    def previousCountry(self):
        if self.current > 0:
            self.current -= 1
            self.display(self.current)
            self.errorEdit.setText("")

    def firstCountry(self):
        self.current = 0
        self.display(self.current)
        self.errorEdit.setText("")

    def lastCountry(self):
        self.current = len(countrylist) - 1
        self.display(self.current)
        self.errorEdit.setText("")

    def addEnc(self):
        self.a.markEncourage(int(self.comboBox.currentText()))
        self.display(self.current)

    def addDis(self):
        self.a.markDiscourage(int(self.comboBox.currentText()))
        self.display(self.current)

    def addTimesVisited(self):
        try:
            self.a.addTimesVisited(self.a.getVisited())
            self.display(self.current)
        except NotVisited:
            self.errorEdit.setText("Not visited")
            self.display(self.current)

    def addDaySpent(self):
        try:
            self.a.addDaySpent(self.a.getVisited())
            self.display(self.current)
        except NotVisited:
            self.errorEdit.setText("Not visited")
            self.display(self.current)

    def getRating(self):
        try:
            self.ratingEdit.setText(str(self.a.getRating()) + "%")
        except NoVotes:
            self.errorEdit.setText("No votes")
            self.display(self.current)

    def calcCost(self):
        try:
            self.a.calcCost(self.a.getVisited())
            self.totalCostEdit.setText(str(self.a.getCalcCost()))
        except NotVisited:
            self.errorEdit.setText("Not visited")
            self.display(self.current)

    def quit(self):
        quit()

    def resetAll(self):
        self.countryNameEdit.setText(str(" "))
        self.capitalNameEdit.setText(str(" "))
        self.placesOfInterestEdit.setText(str(" "))
        self.visitedEdit.setText(str(" "))
        self.daySpentEdit.setText(str(" "))
        self.encourageEdit.setText(str(" "))
        self.discourageEdit.setText(str(" "))
        self.visitedCheckBox.setChecked(False)
        self.travelCheckBox.setChecked(False)
        self.ratingEdit.setText(str(" "))
        self.totalCostEdit.setText(str(" "))
        self.errorEdit.setText("")

    def resetRatings(self):
        self.encourageEdit.setText(str(" "))
        self.discourageEdit.setText(str(" "))
        self.ratingEdit.setText(str(" "))

    def resetStay(self):
        self.totalCostEdit.setText(str(" "))
        self.daySpentEdit.setText(str(" "))
        self.visitedEdit.setText(str(" "))

    def updateCountry(self):
        self.a.setName(self.countryNameEdit.text())
        self.a.setCapital(self.capitalNameEdit.text())
        self.a.setPOI(self.placesOfInterestEdit.text())

    def saveAndArchive(self):
        self.updateCountry()
        archiveCmd()


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(556, 566)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold Condensed")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.studentLabel = QtWidgets.QLabel(self.centralwidget)
        self.studentLabel.setGeometry(QtCore.QRect(190, 10, 141, 41))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold Condensed")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.studentLabel.setFont(font)
        self.studentLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.studentLabel.setObjectName("studentLabel")
        self.travellogLabel = QtWidgets.QLabel(self.centralwidget)
        self.travellogLabel.setGeometry(QtCore.QRect(90, 30, 361, 61))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight Condensed")
        font.setPointSize(28)
        self.travellogLabel.setFont(font)
        self.travellogLabel.setObjectName("travellogLabel")
        self.countryLabel = QtWidgets.QLabel(self.centralwidget)
        self.countryLabel.setGeometry(QtCore.QRect(20, 100, 91, 31))
        self.countryLabel.setObjectName("countryLabel")
        self.countryNameEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.countryNameEdit.setGeometry(QtCore.QRect(120, 105, 131, 21))
        self.countryNameEdit.setObjectName("countryNameEdit")
        self.capitalLabel = QtWidgets.QLabel(self.centralwidget)
        self.capitalLabel.setGeometry(QtCore.QRect(270, 100, 91, 31))
        self.capitalLabel.setObjectName("capitalLabel")
        self.capitalNameEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.capitalNameEdit.setGeometry(QtCore.QRect(380, 105, 131, 21))
        self.capitalNameEdit.setObjectName("capitalNameEdit")
        self.placesOfInterestLabel = QtWidgets.QLabel(self.centralwidget)
        self.placesOfInterestLabel.setGeometry(QtCore.QRect(185, 130, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.placesOfInterestLabel.setFont(font)
        self.placesOfInterestLabel.setObjectName("placesOfInterestLabel")
        self.placesOfInterestEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.placesOfInterestEdit.setGeometry(QtCore.QRect(90, 170, 371, 21))
        self.placesOfInterestEdit.setObjectName("placesOfInterestEdit")
        self.ratingsLabel = QtWidgets.QLabel(self.centralwidget)
        self.ratingsLabel.setGeometry(QtCore.QRect(200, 180, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.ratingsLabel.setFont(font)
        self.ratingsLabel.setObjectName("ratingsLabel")
        self.encourageEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.encourageEdit.setGeometry(QtCore.QRect(40, 225, 131, 21))
        self.encourageEdit.setObjectName("encourageEdit")
        self.discourageEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.discourageEdit.setGeometry(QtCore.QRect(360, 225, 131, 21))
        self.discourageEdit.setObjectName("discourageEdit")
        self.encourageLabel = QtWidgets.QLabel(self.centralwidget)
        self.encourageLabel.setGeometry(QtCore.QRect(50, 245, 111, 31))
        self.encourageLabel.setObjectName("encourageLabel")
        self.discourageLabel = QtWidgets.QLabel(self.centralwidget)
        self.discourageLabel.setGeometry(QtCore.QRect(370, 245, 121, 31))
        self.discourageLabel.setObjectName("discourageLabel")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(210, 225, 111, 21))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.encButton = QtWidgets.QPushButton(self.centralwidget)
        self.encButton.setGeometry(QtCore.QRect(180, 250, 75, 23))
        self.encButton.setObjectName("encButton")
        self.disButton = QtWidgets.QPushButton(self.centralwidget)
        self.disButton.setGeometry(QtCore.QRect(280, 250, 75, 23))
        self.disButton.setObjectName("disButton")
        self.visitedEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.visitedEdit.setGeometry(QtCore.QRect(40, 380, 131, 21))
        self.visitedEdit.setObjectName("visitedEdit")
        self.visitedLabel = QtWidgets.QLabel(self.centralwidget)
        self.visitedLabel.setGeometry(QtCore.QRect(65, 350, 91, 31))
        self.visitedLabel.setObjectName("visitedLabel")
        self.visitedButton = QtWidgets.QPushButton(self.centralwidget)
        self.visitedButton.setGeometry(QtCore.QRect(45, 405, 121, 31))
        self.visitedButton.setObjectName("visitedButton")
        self.ratingEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.ratingEdit.setGeometry(QtCore.QRect(200, 280, 131, 21))
        self.ratingEdit.setObjectName("ratingEdit")
        self.ratingButton = QtWidgets.QPushButton(self.centralwidget)
        self.ratingButton.setGeometry(QtCore.QRect(225, 305, 81, 31))
        self.ratingButton.setObjectName("ratingButton")
        self.visitedCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.visitedCheckBox.setGeometry(QtCore.QRect(70, 300, 81, 31))
        self.visitedCheckBox.setObjectName("visitedCheckBox")
        self.travelCheckBox = QtWidgets.QCheckBox(self.centralwidget)
        self.travelCheckBox.setGeometry(QtCore.QRect(370, 300, 111, 31))
        self.travelCheckBox.setObjectName("travelCheckBox")
        self.daySpentLabel = QtWidgets.QLabel(self.centralwidget)
        self.daySpentLabel.setGeometry(QtCore.QRect(215, 350, 111, 31))
        self.daySpentLabel.setObjectName("daySpentLabel")
        self.daySpentEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.daySpentEdit.setGeometry(QtCore.QRect(200, 380, 131, 21))
        self.daySpentEdit.setObjectName("daySpentEdit")
        self.dayVisitedButton = QtWidgets.QPushButton(self.centralwidget)
        self.dayVisitedButton.setGeometry(QtCore.QRect(205, 405, 121, 31))
        self.dayVisitedButton.setObjectName("dayVisitedButton")
        self.costLabel = QtWidgets.QLabel(self.centralwidget)
        self.costLabel.setGeometry(QtCore.QRect(395, 350, 61, 31))
        self.costLabel.setObjectName("costLabel")
        self.totalCostButton = QtWidgets.QPushButton(self.centralwidget)
        self.totalCostButton.setGeometry(QtCore.QRect(370, 405, 121, 31))
        self.totalCostButton.setObjectName("totalCostButton")
        self.totalCostEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.totalCostEdit.setGeometry(QtCore.QRect(365, 380, 131, 21))
        self.totalCostEdit.setObjectName("totalCostEdit")
        self.firstButton = QtWidgets.QPushButton(self.centralwidget)
        self.firstButton.setGeometry(QtCore.QRect(20, 450, 121, 31))
        self.firstButton.setObjectName("firstButton")
        self.prevButton = QtWidgets.QPushButton(self.centralwidget)
        self.prevButton.setGeometry(QtCore.QRect(150, 450, 121, 31))
        self.prevButton.setObjectName("prevButton")
        self.nextButton = QtWidgets.QPushButton(self.centralwidget)
        self.nextButton.setGeometry(QtCore.QRect(280, 450, 121, 31))
        self.nextButton.setObjectName("nextButton")
        self.lastButton = QtWidgets.QPushButton(self.centralwidget)
        self.lastButton.setGeometry(QtCore.QRect(410, 450, 121, 31))
        self.lastButton.setObjectName("lastButton")
        self.archiveButton = QtWidgets.QPushButton(self.centralwidget)
        self.archiveButton.setGeometry(QtCore.QRect(20, 490, 121, 31))
        self.archiveButton.setObjectName("archiveButton")
        self.quitButton = QtWidgets.QPushButton(self.centralwidget)
        self.quitButton.setGeometry(QtCore.QRect(150, 490, 121, 31))
        self.quitButton.setObjectName("quitButton")
        self.errorEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.errorEdit.setGeometry(QtCore.QRect(380, 490, 161, 31))
        self.errorEdit.setObjectName("errorEdit")
        self.errorLabel = QtWidgets.QLabel(self.centralwidget)
        self.errorLabel.setGeometry(QtCore.QRect(280, 490, 91, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(212, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(113, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(212, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(212, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(113, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(212, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(212, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(113, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.errorLabel.setPalette(palette)
        self.errorLabel.setObjectName("errorLabel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 556, 21))
        self.menubar.setObjectName("menubar")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionReset_All = QtWidgets.QAction(MainWindow)
        self.actionReset_All.setObjectName("actionReset_All")
        self.actionReset_Ratings = QtWidgets.QAction(MainWindow)
        self.actionReset_Ratings.setObjectName("actionReset_Ratings")
        self.actionAdd_Archive = QtWidgets.QAction(MainWindow)
        self.actionAdd_Archive.setObjectName("actionAdd_Archive")
        self.actionReset_Stay_Cost = QtWidgets.QAction(MainWindow)
        self.actionReset_Stay_Cost.setObjectName("actionReset_Stay_Cost")
        self.menuSettings.addAction(self.actionReset_All)
        self.menuSettings.addAction(self.actionReset_Ratings)
        self.menuSettings.addAction(self.actionReset_Stay_Cost)
        self.menubar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(MainWindow)
        self.display(self.current)
        self.actionReset_All.triggered.connect(self.resetAll) # type: ignore
        self.actionReset_Ratings.triggered.connect(self.resetRatings) # type: ignore
        self.actionReset_Stay_Cost.triggered.connect(self.resetStay) # type: ignore
        self.encButton.pressed.connect(self.addEnc) # type: ignore
        self.disButton.pressed.connect(self.addDis) # type: ignore
        self.ratingButton.pressed.connect(self.getRating) # type: ignore
        self.visitedButton.pressed.connect(self.addTimesVisited) # type: ignore
        self.dayVisitedButton.pressed.connect(self.addDaySpent) # type: ignore
        self.totalCostButton.pressed.connect(self.calcCost) # type: ignore
        self.firstButton.pressed.connect(self.firstCountry) # type: ignore
        self.lastButton.pressed.connect(self.lastCountry) # type: ignore
        self.prevButton.pressed.connect(self.previousCountry) # type: ignore
        self.quitButton.pressed.connect(self.quit) # type: ignore
        self.archiveButton.pressed.connect(self.saveAndArchive) # type: ignore
        self.nextButton.pressed.connect(self.nextCountry) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.studentLabel.setText(_translate("MainWindow", "A00320562"))
        self.travellogLabel.setText(_translate("MainWindow", "Travel Log Archive System"))
        self.countryLabel.setText(_translate("MainWindow", "Country Name"))
        self.capitalLabel.setText(_translate("MainWindow", "Capital Name"))
        self.placesOfInterestLabel.setText(_translate("MainWindow", "Places Of Interest"))
        self.ratingsLabel.setText(_translate("MainWindow", "Country Ratings"))
        self.encourageLabel.setText(_translate("MainWindow", "Encouragements"))
        self.discourageLabel.setText(_translate("MainWindow", "Discouragements"))
        self.comboBox.setItemText(0, _translate("MainWindow", "1"))
        self.comboBox.setItemText(1, _translate("MainWindow", "2"))
        self.comboBox.setItemText(2, _translate("MainWindow", "3"))
        self.comboBox.setItemText(3, _translate("MainWindow", "4"))
        self.comboBox.setItemText(4, _translate("MainWindow", "5"))
        self.comboBox.setItemText(5, _translate("MainWindow", "6"))
        self.comboBox.setItemText(6, _translate("MainWindow", "7"))
        self.comboBox.setItemText(7, _translate("MainWindow", "8"))
        self.encButton.setText(_translate("MainWindow", "Add Enc"))
        self.disButton.setText(_translate("MainWindow", "Add Dis"))
        self.visitedLabel.setText(_translate("MainWindow", "Times Visited"))
        self.visitedButton.setText(_translate("MainWindow", "Add time Visited"))
        self.ratingButton.setText(_translate("MainWindow", "Rating %"))
        self.visitedCheckBox.setText(_translate("MainWindow", "Visited"))
        self.travelCheckBox.setText(_translate("MainWindow", "Transportable"))
        self.daySpentLabel.setText(_translate("MainWindow", "Total Days Spent"))
        self.dayVisitedButton.setText(_translate("MainWindow", "Add day Spent"))
        self.costLabel.setText(_translate("MainWindow", "Total Cost"))
        self.totalCostButton.setText(_translate("MainWindow", "Calc Total Cost"))
        self.firstButton.setText(_translate("MainWindow", "First"))
        self.prevButton.setText(_translate("MainWindow", "Prev"))
        self.nextButton.setText(_translate("MainWindow", "Next"))
        self.lastButton.setText(_translate("MainWindow", "Last"))
        self.archiveButton.setText(_translate("MainWindow", "Archive"))
        self.quitButton.setText(_translate("MainWindow", "Quit"))
        self.errorLabel.setText(_translate("MainWindow", "Error Message"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.actionReset_All.setText(_translate("MainWindow", "Reset All"))
        self.actionReset_Ratings.setText(_translate("MainWindow", "Reset Ratings"))
        self.actionAdd_Archive.setText(_translate("MainWindow", "Add Archive"))
        self.actionReset_Stay_Cost.setText(_translate("MainWindow", "Reset Stay + Cost"))


app = QApplication([])
w= QMainWindow()
w.setWindowTitle('loot')
ex = Ui_MainWindow()
ex.setupUi(w)
w.resize(556,580)
w.show()
app.exec_()